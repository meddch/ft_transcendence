services:
  next:
    container_name: next
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    volumes:
      - ./frontend:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    networks:
      - transcendence
    env_file:
      - .env
    depends_on:
      - django
    restart: always

  django:
    container_name: django
    build: ./backend
    volumes:
      - ./backend:/usr/src/app
    networks:
      - transcendence
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always

  nginx:
    container_name: nginx
    build: ./nginx
    networks:
      - transcendence
    ports:
      - "443:443"
    environment:
      - SERVER_NAME=${SERVER_NAME}
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/nginx.conf.template
    depends_on:
      - next
      - django
    restart: always
  redis:
    container_name: redis
    image: redis:7
    networks:
      - transcendence
    restart: always
  db:
    container_name: db
    image: postgres:16.3
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - transcendence
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    restart: always


volumes:
  db_data:
  node_modules:
  static:
  media:

networks:
  transcendence:
    driver: bridge